name: Flutter Build (APK + IPA)

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build_apk:
    name: Build Flutter APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.0"
          channel: stable
          cache: true

      - name: Install Dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  build_ipa:
    name: Build Flutter IPA
    runs-on: macos-latest  # macOS required for iOS build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.0"
          channel: stable
          cache: true

      - name: Install Dependencies
        run: flutter pub get

      - name: Build iOS (Without Code Signing)
        run: flutter build ios --release --no-codesign

      - name: Archive iOS App
        run: |
          cd ios
          xcodebuild -workspace Runner.xcworkspace \
            -scheme Runner \
            -sdk iphoneos \
            -configuration Release \
            -archivePath build/Runner.xcarchive archive

      - name: Export IPA
        run: |
          cd ios
          xcodebuild -exportArchive \
            -archivePath build/Runner.xcarchive \
            -exportPath build/ \
            -exportOptionsPlist exportOptions.plist

      - name: Upload IPA as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: ios/build/Runner.ipa

  release:
    name: Create GitHub Release
    needs: [build_apk, build_ipa]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Built APK
        uses: actions/download-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/

      - name: Download Built IPA
        uses: actions/download-artifact@v4
        with:
          name: release-ipa
          path: ios/build/

      - name: Check for Changes
        id: check_changes
        run: echo "CHANGES=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v1.${{ github.run_number }}-${{ env.CHANGES }}"
          name: "Release v1.${{ github.run_number }}-${{ env.CHANGES }}"
          body: "New release of the app with latest changes."
          files: |
            build/app/outputs/flutter-apk/app-release.apk
            ios/build/Runner.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
